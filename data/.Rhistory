}
X = panelViz_dataset$new_dx
new_vector = c()
for (x in X){
if (x == FALSE & counter <= 100)
new_vector <- c(new_vector, TRUE)
counter = counter + 1
else{
new_vector <- c(new_vector, x)
}
}
X = panelViz_dataset$new_dx
new_vector = c()
for (x in X){
if (x == FALSE & counter <= 100)
new_vector <- c(new_vector, TRUE)
counter = counter + 1
else{
new_vector <- c(new_vector, x)
}
}
X = panelViz_dataset$new_dx
new_vector = c()
for (x in X){
if (x == FALSE & counter <= 100)
new_vector <- c(new_vector, TRUE)
counter = counter + 1
else{
new_vector <- c(new_vector, x)
}
}
X = panelViz_dataset$new_dx
new_vector = c()
for (x in X){
if (x == FALSE & counter <= 100)
new_vector <- c(new_vector, TRUE)
counter = counter + 1
else{
new_vector <- c(new_vector, x)
}
}
X = panelViz_dataset$new_dx
new_vector = c()
for (x in X){
if (x == FALSE & counter <= 100) {}
new_vector <- c(new_vector, TRUE)
counter = counter + 1
}
else{
new_vector <- c(new_vector, x)
}
}
X = panelViz_dataset$new_dx
new_vector = c()
for (x in X){
if (x == FALSE & counter <= 100) {}
new_vector <- c(new_vector, TRUE)
counter = counter + 1
}
else{
new_vector <- c(new_vector, x)
}
}
X = panelViz_dataset$new_dx
new_vector = c()
for (x in X){
if (x == FALSE & counter <= 100) {
new_vector <- c(new_vector, TRUE)
counter = counter + 1
}
else{
new_vector <- c(new_vector, x)
}
}
new_vector
new_vector = c()
for (x in X){
if (x == FALSE & counter <= 100) {
print("dicks dicks dicks")
new_vector <- c(new_vector, TRUE)
counter = counter + 1
}
else{
new_vector <- c(new_vector, x)
}
}
X = panelViz_dataset$new_dx
new_vector = c()
for (x in X){
if (x == FALSE & counter < 100) {
print("dicks dicks dicks")
new_vector <- c(new_vector, TRUE)
counter = counter + 1
}
else{
new_vector <- c(new_vector, x)
}
}
new_vector = c()
for (x in X){
if (x == FALSE & counter < 100) {
print("dicks dicks dicks")
new_vector <- c(new_vector, TRUE)
counter = counter + 1
}
else{
print(x)
new_vector <- c(new_vector, x)
}
}
new_vector = c()
for (x in X){
if (x == FALSE) {
print("dicks dicks dicks")
new_vector <- c(new_vector, TRUE)
counter = counter + 1
}
else{
print(x)
new_vector <- c(new_vector, x)
}
}
new_vector = c()
counter = 0
for (x in X){
if (x == FALSE & counter < 100) {
print("dicks dicks dicks")
new_vector <- c(new_vector, TRUE)
counter = counter + 1
}
else{
print(x)
new_vector <- c(new_vector, x)
}
}
new_vector = c()
counter = 0
for (x in X){
if (x == FALSE & counter < 100) {
new_vector <- c(new_vector, TRUE)
counter = counter + 1
}
else{
new_vector <- c(new_vector, x)
}
}
new_vector
shuffleDF <- function(X){
rows <- sample(nrow(X))
return(X[rows, ])}
proportion <- function(X){
sum(X == TRUE)/length(X)
}
increasePrevalence <- function(X){
new_vector = c()
counter = 0
for (x in X){
if (x == FALSE & counter < 100) {
new_vector <- c(new_vector, TRUE)
counter = counter + 1
}
else{
new_vector <- c(new_vector, x)
}
}
}
divergeBinary(X){
if (proportion < 0.2){
return(increasePrevalence(X))
}
else {
return(X)
}
}
shuffleDF <- function(X){
rows <- sample(nrow(X))
return(X[rows, ])}
proportion <- function(X){
sum(X == TRUE)/length(X)
}
increasePrevalence <- function(X){
new_vector = c()
counter = 0
for (x in X){
if (x == FALSE & counter < 100) {
new_vector <- c(new_vector, TRUE)
counter = counter + 1
}
else{
new_vector <- c(new_vector, x)
}
}
}
divergeBinary(X){
if (proportion < 0.2){
return(increasePrevalence(X))
}
else {
return(X)
}
}
divergeBinary(X){
if (proportion < 0.2) {
return(increasePrevalence(X))
} else {
return(X)
}
}
proportion <- function(X){
return(sum(X == TRUE)/length(X))
}
divergeBinary(X){
if (proportion < 0.2) {
return(increasePrevalence(X))
} else {
return(X)
}
}
divergeBinary(panelViz_dataset$new_dx)
divergeBinary(X){
if (proportion < 0.2) {
X = increasePrevalence(X)
} else {
X = X
}
return(X)
}
divergeBinary(X){
if (proportion < 0.2) {
X = increasePrevalence(X)
} else {
X = X
}
return(X)
}
divergeBinary <- function(X){
if (proportion < 0.2) {
X = increasePrevalence(X)
} else {
X = X
}
return(X)
}
divergeBinary(panelViz_dataset$new_dx)
divergeBinary <- function(X){
if (proportion(X) < 0.2) {
X = increasePrevalence(X)
} else {
X = X
}
return(X)
}
divergeBinary(panelViz_dataset$new_dx)
proportion(X)
divergeBinary <- function(X){
if (proportion(X) < 0.2) {
print("dicks")
X = increasePrevalence(X)
} else {
X = X
}
return(X)
}
divergeBinary(panelViz_dataset$new_dx)
divergeBinary <- function(X){
if (proportion(X) < 0.2) {
print(increasePrevalence(X))
} else {
X = X
}
return(X)
}
divergeBinary(panelViz_dataset$new_dx)
divergeBinary(panelViz_dataset$new_dx)
divergeBinary <- function(X){
if (proportion(X) < 0.2) {
X = increasePrevalence(X)
} else {
X = X
}
return(X)
}
dicks = divergeBinary(panelViz_dataset$new_dx)
dicks
divergeBinary <- function(X){
if (proportion(X) < 0.2) {
X = increasePrevalence(X)
print(X)
} else {
X = X
}
return(X)
}
dicks = divergeBinary(panelViz_dataset$new_dx)
divergeBinary <- function(X){
if (proportion(X) < 0.2) {
X = increasePrevalence(X)
print('dicks')
} else {
X = X
}
return(X)
}
dicks = divergeBinary(panelViz_dataset$new_dx)
divergeBinary <- function(X){
if (proportion(X) < 0.2) {
print(increasePrevalence(X))
} else {
X = X
}
return(X)
}
dicks = divergeBinary(panelViz_dataset$new_dx)
increasePrevalence <- function(X){
new_vector = c()
counter = 0
for (x in X){
if (x == FALSE & counter < 100) {
new_vector <- c(new_vector, TRUE)
counter = counter + 1
}
else{
new_vector <- c(new_vector, x)
}
}
return(new_vector)
}
divergeBinary <- function(X){
if (proportion(X) < 0.2) {
print(increasePrevalence(X))
} else {
X = X
}
return(X)
}
dicks = divergeBinary(panelViz_dataset$new_dx)
divergeBinary <- function(X){
if (proportion(X) < 0.2) {
X = increasePrevalence(X)
} else {
X = X
}
return(X)
}
dicks = divergeBinary(panelViz_dataset$new_dx)
dicks
increasePrevalence <- function(X){
new_vector = c()
counter = 0
for (x in X){
if (x == FALSE & counter < 100) {
new_vector <- c(new_vector, TRUE)
counter = counter + 1
}
else{
new_vector <- c(new_vector, x)
}
}
return(new_vector)
}
decreasePrevalence <- function(X){
new_vector = c()
counter = 0
for (x in X){
if (x == TRUE & counter < 100) {
new_vector <- c(new_vector, FALSE)
counter = counter + 1
}
else{
new_vector <- c(new_vector, x)
}
}
return(new_vector)
}
divergeBinary <- function(X){
if (proportion(X) < 0.2) {
X = increasePrevalence(X)
} else {
X = X
}
return(X)
}
shuffleDF(panelViz_dataset) %>%
mutate(new_dx = divergeBinary(new_dx))
library(dplyr)
shuffleDF(panelViz_dataset) %>%
mutate(new_dx = divergeBinary(new_dx))
names(panelViz_dataset)
proportion(panelViz_dataset$vls)
sample(c(TRUE,FALSE)
)
?sample
sample(c(TRUE,FALSE), n=1)
sample(c(TRUE,FALSE), size = 1)
sample(c(TRUE,FALSE), size = 1)
sample(c(TRUE,FALSE), size = 1)
sample(c(TRUE,FALSE), size = 1)
sample(c(TRUE,FALSE), size = 1)
sample(c(TRUE,FALSE), size = 1)
sample(c(TRUE,FALSE), size = 1)
sample(c(TRUE,FALSE), size = 1)
sample(c(TRUE,FALSE), size = 1)
sample(c(TRUE,FALSE), size = 1)
sample(c(TRUE,FALSE), size = 1)
sample(c(TRUE,FALSE), size = 1)
# helper functions
shuffleDF <- function(X){
rows <- sample(nrow(X))
return(X[rows, ])}
proportion <- function(X){
return(sum(X == TRUE)/length(X))
}
increasePrevalence <- function(X){
new_vector = c()
counter = 0
for (x in X){
# to increase prevalence by 20%, increase the number of 'TRUE's by 100
if (x == FALSE & counter < 100) {
replacement <- sample(c(TRUE,FALSE), size = 1)
if (replacement == TRUE){counter = counter + 1}
new_vector <- c(new_vector, replacement)
}
else{
new_vector <- c(new_vector, x)
}
}
return(new_vector)
}
decreasePrevalence <- function(X){
new_vector = c()
counter = 0
for (x in X){
if (x == TRUE & counter < 100) {
replacement <- sample(c(TRUE,FALSE), size = 1)
if (replacement == FALSE){counter = counter + 1}
new_vector <- c(new_vector, replacement)
}
else{
new_vector <- c(new_vector, x)
}
}
return(new_vector)
}
# decrease prevalence by 20% if X < 20%, otherwise increase by 20%
divergeBinary <- function(X){
if (proportion(X) < 0.2) {
X = increasePrevalence(X)
} else {
X = X
}
return(X)
}
dicks = divergeBinary(panelViz_dataset$new_dx)
dicks
shuffleDF(panelViz_dataset) %>%
mutate(dx_alcoholism = divergeBinary(dx_alcoholism),
dx_depression = divergeBinary(dx_depression),
dx_unstable_housing = divergeBinary(dx_unstable_housing),
dx_schizophrenia = divergeBinary(dx_schizophreniax),
dx_hcv = divergeBinary(dx_hcv),
dx_ckd = divergeBinary(dx_ckd),
dx_hcv = divergeBinary(dx_hcv),
vls = divergeBinary(vls),
dx_hcv = divergeBinary(dx_hcv))
shuffleDF(panelViz_dataset) %>%
mutate(dx_alcoholism = divergeBinary(dx_alcoholism),
dx_depression = divergeBinary(dx_depression),
dx_unstable_housing = divergeBinary(dx_unstable_housing),
dx_schizophrenia = divergeBinary(dx_schizophrenia),
dx_hcv = divergeBinary(dx_hcv),
dx_ckd = divergeBinary(dx_ckd),
dx_hcv = divergeBinary(dx_hcv),
vls = divergeBinary(vls),
dx_hcv = divergeBinary(dx_hcv))
names(panelViz_dataset)
?write
# alcohol abuse, depression, unstable housing, schizophrenia, chronic HCV, CKD, VLS
# CD4 count, office visits, inpatient admissions
panelViz_dataset <- read.csv('panelViz_dataset.csv')
panelViz_dataset <- shuffleDF(panelViz_dataset) %>%
mutate(dx_alcoholism = divergeBinary(dx_alcoholism),
dx_depression = divergeBinary(dx_depression),
dx_unstable_housing = divergeBinary(dx_unstable_housing),
dx_schizophrenia = divergeBinary(dx_schizophrenia),
dx_hcv = divergeBinary(dx_hcv),
dx_ckd = divergeBinary(dx_ckd),
dx_hcv = divergeBinary(dx_hcv),
vls = divergeBinary(vls),
dx_hcv = divergeBinary(dx_hcv))
write.csv('modified_panelViz_dataset.csv')
panelViz_dataset <- read.csv('panelViz_dataset.csv')
panelViz_dataset <- shuffleDF(panelViz_dataset) %>%
mutate(dx_alcoholism = divergeBinary(dx_alcoholism),
dx_depression = divergeBinary(dx_depression),
dx_unstable_housing = divergeBinary(dx_unstable_housing),
dx_schizophrenia = divergeBinary(dx_schizophrenia),
dx_hcv = divergeBinary(dx_hcv),
dx_ckd = divergeBinary(dx_ckd),
dx_hcv = divergeBinary(dx_hcv),
vls = divergeBinary(vls),
dx_hcv = divergeBinary(dx_hcv))
write.csv(panelViz_dataset, 'modified_panelViz_dataset.csv')
write.csv(baseline_dataset, 'modified_baseline_dataset.csv')
baseline_dataset <- read.csv('baseline_dataset.csv')
baseline_dataset <- shuffleDF(baseline_dataset) %>%
mutate(dx_drug_abuse = divergeBinary(dx_drug_abuse),
dx_anxiety = divergeBinary(dx_anxiety),
new_dx = divergeBinary(new_dx),
dx_hypertension = divergeBinary(dx_hypertension),
dx_cardiovascular_disease = divergeBinary(dx_cardiovascular_disease),
dx_diabetes = divergeBinary(dx_diabetes))
write.csv(baseline_dataset, 'modified_baseline_dataset.csv')
