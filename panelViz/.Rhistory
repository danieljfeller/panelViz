rawDF
rawDF[1,]
runApp()
runApp()
runApp()
df
df[1,]
runApp()
library(shinyjqui)
library(DT)
library(shinythemes)
library(dplyr)
library(d3heatmap)
library(ggplot2)
# convert logical vector to character
toFactor <- function(x){
return(as.factor(ifelse(as.logical(x) == TRUE, "Yes", "No")))
}
df <- read.csv('synthetic_patients.csv') %>%
mutate(VLS = toFactor(VLS),
drugAbuse =toFactor(drugAbuse),
etohAbuse = toFactor(etohAbuse),
LTFU = toFactor(LTFU),
UnstableHousing = toFactor(UnstableHousing),
MissedApt = toFactor(MissedApt),
NewDx = toFactor(NewDx),
HCV = toFactor(HCV),
HTN = toFactor(HTN),
behavioralDx = toFactor(behavioralDx),
hospitalizationRisk = round(hospitalizationRisk, digits = 2))
################
# hex bin plot #
################
df$rank <- row_number(df$Name)
df$j <- 1
df$i <- 1
counter = 0
offset <- 0.5 #offset for the hexagons when moving up a row
for (row in 1:23){
# change offset when increasing rows
offset <- ifelse(offset == 0.5, 0, 0.5)
for (column in 1:22){
counter <- counter + 1
df[df$rank == counter,]$i <- row
df[df$rank == counter,]$j <- column + offset
print(paste(counter, row, column + offset))
}
}
# get some colors
ColRamp <- rev(designer.colors(n=10, col=brewer.pal(9, "Spectral")))
# plot the hex bins
ggplot(data = df, aes(x=i, y=j, fill=hospitalizationRisk))+
geom_hex(stat='identity')+
scale_fill_gradientn(colours = ColRamp)+
theme_bw()+
coord_flip()
ggplotly(p)
install.packages('Cairo')
runApp()
x[!duplicated(x)]
x <- rawDF
x[!duplicated(x)]
x[!duplicated(x),]
runApp()
runApp()
install.packages(c("backports", "callr", "caTools", "clipr", "curl", "data.table", "devtools", "digest", "DT", "ellipsis", "ggplot2", "htmltools", "htmlwidgets", "httpuv", "httr", "kernlab", "later", "openssl", "pkgbuild", "pkgconfig", "plotly", "processx", "promises", "purrr", "R6", "Rcpp", "rlang", "roxygen2", "scales", "shiny", "sys", "testthat", "tidyr", "webshot", "whisker", "xml2"))
install.packages(c("boot", "foreign", "KernSmooth", "Matrix", "mgcv", "nlme", "survival"), lib="/usr/local/Cellar/r/3.6.1/lib/R/library")
shiny::runApp()
runApp()
library(shinyjqui)
library(DT)
library(shinythemes)
library(dplyr)
library(d3heatmap)
library(ggplot2)
# convert logical vector to character
toFactor <- function(x){
return(as.factor(ifelse(as.logical(x) == TRUE, "Yes", "No")))
}
df <- read.csv('synthetic_patients.csv') %>%
mutate(VLS = toFactor(VLS),
drugAbuse =toFactor(drugAbuse),
etohAbuse = toFactor(etohAbuse),
LTFU = toFactor(LTFU),
UnstableHousing = toFactor(UnstableHousing),
MissedApt = toFactor(MissedApt),
NewDx = toFactor(NewDx),
HCV = toFactor(HCV),
HTN = toFactor(HTN),
behavioralDx = toFactor(behavioralDx),
hospitalizationRisk = round(hospitalizationRisk, digits = 2))
################
# hex bin plot #
################
df$rank <- row_number(df$Name)
df$j <- 1
df$i <- 1
counter = 0
offset <- 0.5 #offset for the hexagons when moving up a row
for (row in 1:23){
# change offset when increasing rows
offset <- ifelse(offset == 0.5, 0, 0.5)
for (column in 1:22){
counter <- counter + 1
df[df$rank == counter,]$i <- row
df[df$rank == counter,]$j <- column + offset
print(paste(counter, row, column + offset))
}
}
# get some colors
ColRamp <- rev(designer.colors(n=10, col=brewer.pal(9, "Spectral")))
# plot the hex bins
ggplot(data = df, aes(x=i, y=j, fill=hospitalizationRisk))+
geom_hex(stat='identity')+
scale_fill_gradientn(colours = ColRamp)+
theme_bw()+
coord_flip()
# plot the hex bins
ggplot(data = df, aes(x=i, y=j, fill=hospitalizationRisk))+
geom_hex(stat='identity')+
#scale_fill_gradientn(colours = ColRamp)+
theme_bw()+
coord_flip()
runApp()
runApp()
ColRamp <- rev(designer.colors(n=10, col=brewer.pal(9, "Spectral")))
ColRamp <- rev(designer.colors(n=10, col=brewer.pal(9, "Spectral")))
library(fields)
ColRamp <- rev(designer.colors(n=10, col=brewer.pal(9, "Spectral")))
library(shinyjqui)
library(DT)
library(shinythemes)
library(dplyr)
library(d3heatmap)
library(ggplot2)
library(fields)
library(RColorBrewer)
ColRamp <- rev(designer.colors(n=10, col=brewer.pal(9, "Spectral")))
# plot the hex bins
ggplot(data = df, aes(x=i, y=j, fill=hospitalizationRisk))+
geom_hex(stat='identity')+
scale_fill_gradientn(colours = ColRamp)+
theme_bw()+
coord_flip()
library(shinyjqui)
library(DT)
library(shinythemes)
library(dplyr)
library(d3heatmap)
library(ggplot2)
library(fields)
library(RColorBrewer)
# convert logical vector to character
toFactor <- function(x){
return(as.factor(ifelse(as.logical(x) == TRUE, "Yes", "No")))
}
df <- read.csv('synthetic_patients.csv') %>%
mutate(VLS = toFactor(VLS),
drugAbuse =toFactor(drugAbuse),
etohAbuse = toFactor(etohAbuse),
LTFU = toFactor(LTFU),
UnstableHousing = toFactor(UnstableHousing),
MissedApt = toFactor(MissedApt),
NewDx = toFactor(NewDx),
HCV = toFactor(HCV),
HTN = toFactor(HTN),
behavioralDx = toFactor(behavioralDx),
hospitalizationRisk = round(hospitalizationRisk, digits = 2))
################
# hex bin plot #
################
df$rank <- row_number(df$Name)
df$j <- 1
df$i <- 1
counter = 0
offset <- 0.5 #offset for the hexagons when moving up a row
for (row in 1:23){
# change offset when increasing rows
offset <- ifelse(offset == 0.5, 0, 0.5)
for (column in 1:22){
counter <- counter + 1
df[df$rank == counter,]$i <- row
df[df$rank == counter,]$j <- column + offset
print(paste(counter, row, column + offset))
}
}
# get some colors
ColRamp <- rev(designer.colors(n=10, col=brewer.pal(9, "Spectral")))
# plot the hex bins
ggplot(data = df, aes(x=i, y=j, fill=hospitalizationRisk))+
geom_hex(stat='identity')+
scale_fill_gradientn(colours = ColRamp)+
theme_bw()+
coord_flip()
ggplotly(p)
d <- ggplot(data = df, aes(x=i, y=j, z=rank))
d + stat_summary_hex(fun=sum)
###########
# heatmap #
###########
counter = 0
for (row in 1:23){
# change offset when increasing rows
for (column in 1:22){
counter <- counter + 1
df[df$rank == counter,]$i <- row
df[df$rank == counter,]$j <- column + offset
print(paste(counter, row, column + offset))
}
}
ggplot(data = df, aes(x=i, y=j, fill = CD4))+
geom_bin2d(stat='identity')+
scale_fill_gradientn(colours = ColRamp)+
theme_bw()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplotly()
lilbrary(plotly)
# plot the hex bins
p <- ggplot(data = df, aes(x=i, y=j, fill=hospitalizationRisk))+
geom_hex(stat='identity')+
scale_fill_gradientn(colours = ColRamp)+
theme_bw()+
coord_flip()
ggplotly(p)
library(shinyjqui)
library(DT)
library(shinythemes)
library(dplyr)
library(d3heatmap)
library(ggplot2)
library(fields)
library(RColorBrewer)
library(plotly)
# convert logical vector to character
toFactor <- function(x){
return(as.factor(ifelse(as.logical(x) == TRUE, "Yes", "No")))
}
df <- read.csv('synthetic_patients.csv') %>%
mutate(VLS = toFactor(VLS),
drugAbuse =toFactor(drugAbuse),
etohAbuse = toFactor(etohAbuse),
LTFU = toFactor(LTFU),
UnstableHousing = toFactor(UnstableHousing),
MissedApt = toFactor(MissedApt),
NewDx = toFactor(NewDx),
HCV = toFactor(HCV),
HTN = toFactor(HTN),
behavioralDx = toFactor(behavioralDx),
hospitalizationRisk = round(hospitalizationRisk, digits = 2))
################
# hex bin plot #
################
df$rank <- row_number(df$Name)
df$j <- 1
df$i <- 1
counter = 0
offset <- 0.5 #offset for the hexagons when moving up a row
for (row in 1:23){
# change offset when increasing rows
offset <- ifelse(offset == 0.5, 0, 0.5)
for (column in 1:22){
counter <- counter + 1
df[df$rank == counter,]$i <- row
df[df$rank == counter,]$j <- column + offset
print(paste(counter, row, column + offset))
}
}
# get some colors
ColRamp <- rev(designer.colors(n=10, col=brewer.pal(9, "Spectral")))
# plot the hex bins
p <- ggplot(data = df, aes(x=i, y=j, fill=hospitalizationRisk))+
geom_hex(stat='identity')+
scale_fill_gradientn(colours = ColRamp)+
theme_bw()+
coord_flip()
ggplotly(p)
library(Cairo)
install.packages('Cairo')
library(shinyjqui)
library(DT)
library(shinythemes)
library(dplyr)
library(d3heatmap)
library(ggplot2)
library(fields)
library(RColorBrewer)
library(plotly)
library(cairo)
install.packages('cairo')
install.packages('Cairo')
install.packages('shinyjqui')
install.packages('DT')
install.packages('shinythemes')
install.packages('dplyr')
install.packages('d3heatmap')
install.packages('fields')
install.packages('ggplot2')
install.packages('RColorBrewer')
install.packages('plotly')
install.packages('Cairo')
library(shinyjqui)
library(DT)
library(shinythemes)
library(dplyr)
library(d3heatmap)
library(ggplot2)
library(fields)
library(RColorBrewer)
library(plotly)
library(cairo)
# convert logical vector to character
toFactor <- function(x){
return(as.factor(ifelse(as.logical(x) == TRUE, "Yes", "No")))
}
df <- read.csv('synthetic_patients.csv') %>%
mutate(VLS = toFactor(VLS),
drugAbuse =toFactor(drugAbuse),
etohAbuse = toFactor(etohAbuse),
LTFU = toFactor(LTFU),
UnstableHousing = toFactor(UnstableHousing),
MissedApt = toFactor(MissedApt),
NewDx = toFactor(NewDx),
HCV = toFactor(HCV),
HTN = toFactor(HTN),
behavioralDx = toFactor(behavioralDx),
hospitalizationRisk = round(hospitalizationRisk, digits = 2))
################
# hex bin plot #
################
df$rank <- row_number(df$Name)
df$j <- 1
df$i <- 1
counter = 0
offset <- 0.5 #offset for the hexagons when moving up a row
for (row in 1:23){
# change offset when increasing rows
offset <- ifelse(offset == 0.5, 0, 0.5)
for (column in 1:22){
counter <- counter + 1
df[df$rank == counter,]$i <- row
df[df$rank == counter,]$j <- column + offset
print(paste(counter, row, column + offset))
}
}
# get some colors
ColRamp <- rev(designer.colors(n=10, col=brewer.pal(9, "Spectral")))
# plot the hex bins
p <- ggplot(data = df, aes(x=i, y=j, fill=hospitalizationRisk))+
geom_hex(stat='identity')+
scale_fill_gradientn(colours = ColRamp)+
theme_bw()+
coord_flip()
ggplotly(p)
p
library(shinyjqui)
library(DT)
library(shinythemes)
library(dplyr)
library(d3heatmap)
library(ggplot2)
library(fields)
library(RColorBrewer)
library(plotly)
library(cairo)
# convert logical vector to character
toFactor <- function(x){
return(as.factor(ifelse(as.logical(x) == TRUE, "Yes", "No")))
}
df <- read.csv('synthetic_patients.csv') %>%
mutate(VLS = toFactor(VLS),
drugAbuse =toFactor(drugAbuse),
etohAbuse = toFactor(etohAbuse),
LTFU = toFactor(LTFU),
UnstableHousing = toFactor(UnstableHousing),
MissedApt = toFactor(MissedApt),
NewDx = toFactor(NewDx),
HCV = toFactor(HCV),
HTN = toFactor(HTN),
behavioralDx = toFactor(behavioralDx),
hospitalizationRisk = round(hospitalizationRisk, digits = 2))
################
# hex bin plot #
################
df$rank <- row_number(df$Name)
df$j <- 1
df$i <- 1
counter = 0
offset <- 0.5 #offset for the hexagons when moving up a row
for (row in 1:23){
# change offset when increasing rows
offset <- ifelse(offset == 0.5, 0, 0.5)
for (column in 1:22){
counter <- counter + 1
df[df$rank == counter,]$i <- row
df[df$rank == counter,]$j <- column + offset
print(paste(counter, row, column + offset))
}
}
# get some colors
ColRamp <- rev(designer.colors(n=10, col=brewer.pal(9, "Spectral")))
# plot the hex bins
p <- ggplot(data = df, aes(x=i, y=j, fill=hospitalizationRisk))+
geom_hex(stat='identity')+
scale_fill_gradientn(colours = ColRamp)+
theme_bw()+
coord_flip()
ggplotly(p)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df <- read.csv('synthetic_patients.csv') %>%
mutate(VLS = toFactor(VLS),
diabetes = toFactor(DM),
drugAbuse =toFactor(drugAbuse),
etohAbuse = toFactor(etohAbuse),
LTFU = toFactor(LTFU),
UnstableHousing = toFactor(UnstableHousing),
MissedApt = toFactor(MissedApt),
NewDx = toFactor(NewDx),
HCV = toFactor(HCV),
HTN = toFactor(HTN),
behavioralDx = toFactor(behavioralDx),
hospitalizationRisk = round(hospitalizationRisk, digits = 2))
names(df)
rawDF <- read.csv('synthetic_patients.csv')[1:500,]
pt.names <- rawDF$Name
df <- read.csv('synthetic_patients.csv') %>%
mutate(VLS = toFactor(VLS),
diabetes = toFactor(DM),
drugAbuse =toFactor(drugAbuse),
etohAbuse = toFactor(etohAbuse),
LTFU = toFactor(LTFU),
UnstableHousing = toFactor(UnstableHousing),
MissedApt = toFactor(MissedApt),
NewDx = toFactor(NewDx),
HCV = toFactor(HCV),
HTN = toFactor(HTN),
behavioralDx = toFactor(behavioralDx),
hospitalizationRisk = round(hospitalizationRisk, digits = 2))
df <- df[!duplicated(df),]
names(df)
rawDF <- read.csv('synthetic_patients.csv')[1:500,]
pt.names <- rawDF$Name
df <- read.csv('synthetic_patients.csv') %>%
mutate(VLS = toFactor(VLS),
diabetes = toFactor(DM),
drugAbuse =toFactor(drugAbuse),
etohAbuse = toFactor(etohAbuse),
LTFU = toFactor(LTFU),
UnstableHousing = toFactor(UnstableHousing),
MissedApt = toFactor(MissedApt),
NewDx = toFactor(NewDx),
HCV = toFactor(HCV),
HTN = toFactor(HTN),
behavioralDx = toFactor(behavioralDx),
hospitalizationRisk = round(hospitalizationRisk, digits = 2))
df <- df[!duplicated(df),]
names(df)
variables = colnames(df)[-c(1)]
runApp()
runApp()
runApp()
names(df)
variables = colnames(df)[-c(1)]
variablesNamed
variablesNamed
variables = colnames(df)[-c(1)]
variablesNamed <- c('Risk of Hospitalization', 'Substance Abuse', 'Alcohol Abuser', 'Lost to Care', 'CD4+ count', 'Diabetes',
'Unstable Housing', 'Recent Missed Appointment', 'Newly Diagnosed HIV', 'Active HCV', 'High Cost Patient', 'Unmanaged Hypertension',
'Mental Health Disorder')
variablesNamed
length(variablesNamed)
length(variables)
variables
variables = colnames(df)[-c(1,15)]
variables
variables = colnames(df)[-c(1,16)]
variables
variablesNamed <- c('Viral Load', 'Risk of Hospitalization', 'Substance Abuse', 'Alcohol Abuse', 'Lost to Care', 'CD4+ count', 'Diabetes',
'Unstable Housing', 'Recent Missed Appointment', 'Newly Diagnosed HIV', 'Active HCV', 'High Cost Patient', 'Unmanaged Hypertension',
'Mental Health Disorder')
runApp()
variables
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?merge
runApp()
runApp()
runApp()
runApp()
runApp()
?datatable
runApp()
runApp()
runApp()
runApp()
df
runApp()
runApp()
runApp()
